//
// Build FBuild using FBuild
//
#include "..\testcommon.bff"
Using( .StandardEnvironment )

// TODO:B It is a shame this can't come from testcommon due to relative path differences
#if __WINDOWS__
	.VisualStudioPath		= '..\External\SDK\VS11.0'
	.WindowsSDK				= '..\External\SDK\Windows8.1'
	.Compiler				= "$VisualStudioPath$\VC\bin\cl.exe"
	.Librarian				= "$VisualStudioPath$\VC\bin\lib.exe"
	.Linker					= "$VisualStudioPath$\VC\bin\link.exe"
#endif

// Override for different relative VisualStudioPath
#if __WINDOWS__
	Settings		
	{ 
		.Environment	= { "PATH=$VisualStudioPath$\Common7\IDE\",
							"TMP=C:\Windows\Temp",
							"SystemRoot=C:\Windows" }
	}
#endif

// For OSX/Linux use the standard settings
#if __OSX__
    Settings {}
#endif
#if __LINUX__
    Settings {}
#endif

// Windows
//--------
#if __WINDOWS__
	.CompilerOptions	+ ' /I"./"'
						+ ' /I"$WindowsSDK$\Include\shared"'
						+ ' /I"$WindowsSDK$\Include\um"'
						+ ' /I"$VisualStudioPath$\VC\include"'
	.LinkerOptions		+ ' /IGNORE:4001' // don't complain about linking libs only
						+ ' /MACHINE:X86'
						+ ' /SUBSYSTEM:console'
						+ ' /LIBPATH:"$WindowsSDK$\Lib\winv6.3\um\x86"'
						+ ' /LIBPATH:"$VisualStudioPath$\VC\lib"'
						+ ' kernel32.lib'
						+ ' Ws2_32.lib'
						+ ' LIBCMT.LIB'
#endif

// External Libs
//------------------------------------------------------------------------------
.LZ4BasePath				= '../External/LZ4/lz4-r127'
.LZ4IncludePath				= '$LZ4BasePath$'

//
// Configs
//------------------------------------------------------------------------------
#if __WINDOWS__
	.Configs				= { "Debug",							"Release" }
	.CompilerExtraOptions	= { "/DDEBUG /Od /RTC1 /GS /Oy- /MTd",	"/DRELEASE /Ox /Oy /Oi /GS- /MT /GF /GL /Gy" }
	.LibrarianExtraOptions	= { "",									"/LTCG" }
	.LinkerExtraOptions		= { "^"user32.lib^"",					"/LTCG /OPT:REF,ICF /NXCOMPAT /DYNAMICBASE" }

	.OutputBase				= '../ftmp/Win32/'
#endif
#if __OSX__
    .Configs				= { "Debug",							"Release" }
    .CompilerExtraOptions	= { "-DDEBUG -O0",                      "-DRELEASE -O2" }
    .LibrarianExtraOptions	= { "",									"" }
    .LinkerExtraOptions		= { "",                                 "" }

    .OutputBase				= '../ftmp/OSX/'
#endif
#if __LINUX__
    .Configs				= { "Debug",							"Release" }
    .CompilerExtraOptions	= { "-DDEBUG -O0",                      "-DRELEASE -O2" }
    .LibrarianExtraOptions	= { "",									"" }
    .LinkerExtraOptions		= { "",                                 "" }

    .OutputBase				= '../ftmp/Linux/'
#endif

// Libraries
//------------------------------------------------------------------------------
.ExtraOptions		= ''
.Exclude			= {}
.Files				= {}
.LZ4Lib				= [ .LibName = 'LZ4'			.LibPath = '$LZ4BasePath$'
						.Files = '$LZ4BasePath$/lz4.c' ]
.CoreLib			= [ .LibName = 'Core'			.LibPath = 'Core\'
						.Exclude = { 'Core\CoreTest\' } ]
.CoreTestLib		= [ .LibName = 'CoreTest'		.LibPath = 'Core\CoreTest\' ]
.FBuildCoreLib		= [ .LibName = 'FBuildCore'		.LibPath = 'Tools\FBuild\FBuildCore\'
						#if __WINDOWS__
							.ExtraOptions = ' /I"$LZ4IncludePath$"'
						#endif
                        #if __OSX__
                            .ExtraOptions = ' "-I$LZ4IncludePath$"'
                        #endif
                        #if __LINUX__
                            .ExtraOptions = ' "-I$LZ4IncludePath$"'
                        #endif
                      ]
.FBuildAppLib		= [ .LibName = 'FBuildApp'		.LibPath = 'Tools\FBuild\FBuildApp\' ]
.FBuildTestLib		= [ .LibName = 'FBuildTest'		.LibPath = 'Tools\FBuild\FBuildTest\'
						.Exclude = { 'Tools\FBuild\FBuildTest\Data\' } ]
.TestFrameworkLib	= [ .LibName = 'TestFramework'	.LibPath = 'TestFramework\'
						#if __WINDOWS__
							.ExtraOptions = ' /EHsc'
						#endif
                        #if __OSX__
                            .ExtraOptions = ' -fexceptions'
                        #endif
                        #if __LINUX__
                            .ExtraOptions = ' -fexceptions'
                        #endif
]
.Libs				= { 
						.LZ4Lib
						.CoreLib, 
						.CoreTestLib, 
						.FBuildCoreLib, 
						.FBuildAppLib, 
						.FBuildTestLib
						.TestFrameworkLib
					  }

// Unity
//------------------------------------------------------------------------------
ForEach( .Lib in .Libs )
{
	Using( .Lib )

	Unity( '$LibName$-Unity' )
	{
		.UnityInputPath			= .LibPath
		.UnityInputFiles		= .Files
		.UnityInputExcludePath	= .Exclude
		.UnityOutputPath		= '$OutputBase$\Unity\$LibName$\'
	}
}

//
// Build each configuration
//------------------------------------------------------------------------------
ForEach( .Config			in .Configs,
		 .CompilerExtras	in .CompilerExtraOptions,
		 .LibrarianExtras	in .LibrarianExtraOptions,
		 .LinkerExtras		in .LinkerExtraOptions )
{
	//
	// Modify base properties for current configuration
	//
	.CompilerOptions	+ ' $CompilerExtras$'
	.LibrarianOptions	+ ' $LibrarianExtras$'
	.LinkerOptions		+ ' $LinkerExtras$'

	.OutputBase			+ '\$Config$'

	// Libs
	//------------------------------------------------------------------------------
	ForEach( .Lib in .Libs )
	{
		Using( .Lib )

		Library( '$LibName$-$Config$' )
		{
			.CompilerOptions			+ .ExtraOptions

			// Input
			.CompilerInputUnity			= '$LibName$-Unity'

			// Output
			.CompilerOutputPath			= '$OutputBase$\$LibName$\'
			.LibrarianOutput			= '$OutputBase$\$LibName$\$LibName$.lib'
		}
	}

	// Exes
	//------------------------------------------------------------------------------
	Executable
	{
		.LinkerOutput		= "$OutputBase$\Core\CoreTest\CoreTest.exe"
		#if __WINDOWS__
			.LinkerOptions		+ " /PDB:^"$OutputBase$\Core\CoreTest\CoreTest.pdb^""
		#endif
        #if __LINUX__
            .LinkerOptions      + " -pthread"
        #endif
		.Libraries			= { "CoreTest-$Config$",
                                "Core-$Config$", 
								"TestFramework-$Config$" }
	}

	Executable
	{
		.LinkerOutput		= "$OutputBase$\Tools\FBuild\FBuildApp\FBuild.exe"
		#if __WINDOWS__
			.LinkerOptions		+ " /PDB:^"$OutputBase$\Tools\FBuild\FBuildApp\FBuild.pdb^""            
		#endif
        #if __LINUX__
            .LinkerOptions      + " -pthread"
        #endif
		.Libraries			= { "FBuildApp-$Config$",
								"FBuildCore-$Config$",
                                "Core-$Config$", 
								"LZ4-$Config$" }								
	}

	Executable
	{
		.LinkerOutput		= "$OutputBase$\Tools\FBuild\FBuildTest\FBuildTest.exe"
		#if __WINDOWS__
			.LinkerOptions		+ " /PDB:^"$OutputBase$\Tools\FBuild\FBuildTest\FBuildTest.pdb^""
		#endif
        #if __LINUX__
            .LinkerOptions      + " -pthread"
        #endif
		.Libraries			= { 
                                "FBuildTest-$Config$",
								"FBuildCore-$Config$",
								"TestFramework-$Config$",
                                "Core-$Config$", 
								"LZ4-$Config$" }
	}

	Alias( "all-$Config$" )
	{
		.Targets	= { "$OutputBase$\Tools\FBuild\FBuildApp\FBuild.exe",
						"$OutputBase$\Tools\FBuild\FBuildTest\FBuildTest.exe",
						"$OutputBase$\Core\CoreTest\CoreTest.exe" }
	}
}

Alias( "fbuild" )
{
	.Targets = { "all-debug", "all-release" }
}